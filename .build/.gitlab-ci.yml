stages:
  - build
  - test

buildComposerDeps:
  stage: build
  image: "registry.gitlab.com/starterteam/starter:latest"
  variables:
    COMPOSER_CACHE_DIR: '.composer'
  script:
    - composer install --prefer-dist --no-interaction --no-progress --optimize-autoloader
  tags:
    - docker
  artifacts:
    when: on_success
    expire_in: 2 weeks
    paths:
      - .craft
  cache:
    paths:
      - .composer

checkDeprecations:
  stage: test
  image: "registry.gitlab.com/starterteam/starter:latest"
  variables:
    SCANNER_RELEASE: "https://github.com/Tuurlijk/typo3scan/releases/download/1.6.3/typo3scan.phar"
    REPORT_FOLDER: "documentation/doc/code-qualitaet/deprecation"
    SCAN_FOLDER: ".craft/Web/typo3conf/ext/starter"
  script:
    - curl -OL $SCANNER_RELEASE
    - php ./typo3scan.phar
    - for d in ./$SCAN_FOLDER ; do (php ./typo3scan.phar scan --target 9 --format markdown $d > $REPORT_FOLDER/deprecation-v9.md); done
    - for d in ./$SCAN_FOLDER ; do (php ./typo3scan.phar scan --target 10 --format markdown $d > $REPORT_FOLDER/deprecation-v10.md); done
  artifacts:
    when: on_success
    expire_in: 7 days
    paths:
      - $REPORT_FOLDER

###
# PHP syntax check
###
phplint:
  stage: test
  image: "registry.gitlab.com/starterteam/starter:latest"
  script:
    - ./.craft/bin/parallel-lint --colors --exclude .craft --exclude documentation .

###
# PHP copy & paste check
###
phpcpd:
  stage: test
  image: "registry.gitlab.com/starterteam/starter:latest"
  variables:
    SCANNER_RELEASE: "https://phar.phpunit.de/phpcpd.phar"
  script:
    - curl -OL $SCANNER_RELEASE
    - php ./phpcpd.phar ./Classes
  tags:
    - docker
  allow_failure: true

###
# PHP code style check
###
phpCS:
  image: "registry.gitlab.com/starterteam/starter:latest"
  stage: test
  variables:
    SCANNER_RELEASE: "https://squizlabs.github.io/PHP_CodeSniffer/phpcs.phar"
  script:
    - curl -OL $SCANNER_RELEASE
    - php ./phpcs.phar ./Classes --standard=PSR2 --colors
  tags:
    - docker

phpMd:
  image: "registry.gitlab.com/starterteam/starter:latest"
  stage: test
  variables:
    SCANNER_RELEASE: "https://phpmd.org/static/latest/phpmd.phar"
  script:
    - curl -OL $SCANNER_RELEASE
    - php ./phpmd.phar ./Classes ansi codesize,unusedcode,design,cleancode,controversial --ignore-violations-on-exit --suffixes php
  tags:
    - docker
  allow_failure: true

typoscriptlint:
  stage: test
  image: "registry.gitlab.com/starterteam/starter:latest"
  script:
    - ./.craft/bin/typoscript-lint -c ./.build/typoscript-lint.yml --fail-on-warnings
  allow_failure: true
